generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String              @id @default(uuid())
  email          String?             @unique
  password       String?             // ????? null n???u ???ng nh??-p b???ng Google
  name           String?
  image          String?             // Avatar t??? tA?i kho???n Google
  emailVerified  DateTime?           // XA?c th???c email
  provider       String?             // "google" ho???c "credentials"
  createdAt      DateTime            @default(now())

  tasks          Task[]
  sessions       PomodoroSession[]
  preference     UserPreference?
}


model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt  
  reminderSent Boolean @default(false)

  userId String
  user   User @relation(fields: [userId], references: [id])
}

model PomodoroSession {
  id         String   @id @default(uuid())
  startTime  DateTime
  endTime    DateTime
  isBreak    Boolean
  createdAt  DateTime @default(now())

  userId String
  user   User @relation(fields: [userId], references: [id])
}

model UserPreference {
  id                    String  @id @default(uuid())
  userId                String  @unique
  user                  User    @relation(fields: [userId], references: [id])
  displayName           String?
  role                  String?
  bio                   String?
  focusDurationMinutes  Int     @default(25)
  shortBreakMinutes     Int     @default(5)
  longBreakMinutes      Int     @default(15)
  emailNotifications    Boolean @default(true)
  pushNotifications     Boolean @default(false)
  weeklyDigest          Boolean @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}
